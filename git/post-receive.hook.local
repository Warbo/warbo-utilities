#!/usr/bin/env bash

# S3 will delete empty directories, but git checks for their presence. Create
# them if they don't exist.
if [[ -e HEAD ]]  # Only make dirs in something that looks like a git repo!
then
    for D in refs/heads refs/tags objects/info
    do
        [[ -e "$D" ]] || mkdir -p "$D"
    done
fi

command -v git > /dev/null || {
    echo "No 'git' command, aborting $0" 1>&2
    exit 1
}

git update-server-info

#command -v ts > /dev/null || {
#    echo "No 'ts' command, aborting $0" 1>&2
#    exit 1
#}

# Fiddle environment to prevent problems
# shellcheck disable=SC2046
unset $(git rev-parse --local-env-vars)

# Mirror everywhere (GitHub, etc.)
git remote | while read -r REMOTE
do
    git branch | cut -c 3- | while read -r BRANCH
    do
        echo "Pushing '$BRANCH' to '$REMOTE'" 1>&2
        git push "$REMOTE" "$BRANCH"
    done
done

#NAME=$(basename "$PWD" .git)
#if command -v laminarc > /dev/null &&
#   [[ -e /var/lib/laminar/cfg/jobs/"$NAME".run ]]
#then
#    echo "Queueing build of '$NAME'" 1>&2
#    LAMINAR_REASON='Git hook' laminarc queue "$NAME"
#fi

#echo "Scheduling push to Web and IPFS" 1>&2
#[[ -n "$IPFS_PATH" ]] || export IPFS_PATH=/var/lib/ipfs/.ipfs
if command -v ts > /dev/null
then
    ts pushGitPages "$PWD"
else
    if command -v tsp > /dev/null
    then
        tsp pushGitPages "$PWD"
    else
        echo "TaskSpooler (ts/tsp) not found, building pages directly" 1>&2
        pushGitPages "$PWD"
    fi
fi
