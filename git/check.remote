#!/usr/bin/env bash

(cd /opt/repos || exit 1
 echo "Make sure each repo in /opt/repos is linked in /opt/git/" 1>&2
 for repo in *.git
 do
     name=$(basename "$repo")
     if [ ! -h "/opt/git/$name" ]
     then
         (cd /opt/git &&
          ln -s "/opt/repos/$name" "$name")
     fi
 done

 echo "Make sure each repo has been initialised" 1>&2
 for repo in *.git
 do
     (cd "$repo" &&
      git init --bare)
 done

 echo "Make sure our repos are not mirrors"
 for repo in *.git
 do
     pushd "$repo" > /dev/null || exit 1
     git remote | while read -r REMOTE
     do
         echo "Removing '$repo' remote '$REMOTE'" 1>&2
         git remote rm "$REMOTE"
     done
     popd > /dev/null || exit 1
 done

 echo "Make sure each repo has its hooks in place" 1>&2
 for repo in *.git
 do
     name=$(basename "$repo")
     (cd "$repo/hooks" || exit 1
      DEST="../../post-receive.hook"
      for hook in post-receive post-update
      do
          if [ -e "$hook" ]
          then
              if [ -h "$hook" ]
              then
                  H=$(readlink -f "$hook")
                  F=$(readlink -f "$DEST")
                  [[ "x$H" = "x$F" ]] || {
                      echo "File '$H' should be symlink to '$DEST'" 1>&2
                  }
              else
                  echo "File '$PWD/$hook' should be symlink but isn't" 1>&2
              fi
          else
              # Use post-receive.hook for both
              ln -s "$DEST" "$hook"
          fi
      done)
 done

 echo "Run the post-receive hook to ensure changes are served" 1>&2
 for repo in *.git
 do
     (cd "$repo" || exit 1
      echo "$PWD"
      sh hooks/post-receive)
 done

 echo "Make sure HTML pages exist" 1>&2
 for repo in *.git
 do
     NAME=$(basename "$repo" .git)
     HTML="/opt/html/$NAME"
     [[ -e "$HTML/index.html" ]] || echo "No HTML pages '$HTML'" 1>&2
 done

 for html in /opt/html/*
 do
     NAME=$(basename "$html")
     REPO="/opt/repos/$NAME.git"
     [[ -e "$REPO" ]] || echo "Found '$html' but not '$REPO'" 1>&2
 done)
